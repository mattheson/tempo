name: "Build release"

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            cache-name: "macos-aarch64"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            cache-name: "macos-x86_64"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install frontend dependencies
        run: npm install

      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri"
          prefix-key: ${{ matrix.cache-name }}

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: tempo-v__VERSION__
          includeDebug: true # only debug builds for now
          includeRelease: false
          releaseName: "tempo v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}